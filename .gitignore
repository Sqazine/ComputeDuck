CMakeLists.txt.user
CMakeCache.txt
CMakeFiles
CMakeScripts
Testing
Makefile
cmake_install.cmake
install_manifest.txt
compile_commands.json
CTestTestfile.cmake
_deps
build/
.vscode

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/


# Build and Object Folders  
bin/  
obj/  
  
# Nuget packages directory  
packages/  
  
## Ignore Visual Studio temporary files, build results, and  
## files generated by popular Visual Studio add-ons.  
  
# User-specific files  
*.suo  
*.user  
*.sln.docstates  
  
# Build results  
[Dd]ebug/  
[Rr]elease/  
x64/  
*_i.c  
*_p.c  
*.ilk  
*.meta  
*.obj  
*.pch  
*.pdb  
*.pgc  
*.pgd  
*.rsp  
*.sbr  
*.tlb  
*.tli  
*.tlh  
*.tmp  
*.log  
*.vspscc  
*.vssscc  
.builds  
  
# Visual C++ cache files  
ipch/  
*.aps  
*.ncb  
*.opensdf  
*.sdf  
  
# Visual Studio profiler  
*.psess  
*.vsp  
*.vspx  
  
# Guidance Automation Toolkit  
*.gpState  
  
# ReSharper is a .NET coding add-in  
_ReSharper*  
  
# NCrunch  
*.ncrunch*  
.*crunch*.local.xml  
  
# Installshield output folder  
[Ee]xpress  
  
# DocProject is a documentation generator add-in  
DocProject/buildhelp/  
DocProject/Help  
UpgradeLog*.XML  
  
# Lightswitch  
_Pvt_Extensions  
GeneratedArtifacts  
*.xap  
ModelManifest.xml  
  
#Backup file  
*.bak

#zzzili
v15/